# ----------------------标识符------------------------------------
# 第一个字符必须是字母表中字母或下划线 _ 。
# 标识符的其他的部分由字母、数字和下划线组成。
# 标识符对大小写敏感。
# 在 Python 3 中，可以用中文作为变量名，非 ASCII 标识符也是允许的了。

# ----------------------保识符------------------------------------
# 保留字即关键字，我们不能把它们用作任何标识符名称。Python 的标准库提供了一个 keyword 模块，可以输出当前版本的所有关键字：

import keyword;
keyword.kwlist
print(keyword.kwlist)

#------------------------注释-------------------------------------
# -----单行注释---------
#世界欢迎你
print('hello,world') #世界欢迎你
#----多行注释----------
'''
第三注释
第四注释
'''

#------------------------行与缩进-------------------------------------
# python最具特色的就是使用缩进来表示代码块，不需要使用大括号 {} 。
# 缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数。
if True:
    print ("True")
else:
    print ("False")
#以下代码最后一行语句缩进数的空格数不一致，会导致运行错误：
# if True:
#     print ("Answer")
#     print ("True")
# else:
#     print ("Answer")
#     print ("False")    # 缩进不一致，会导致运行错误
#
#-----------------------------多行语句----------------------------------------------
# Python 通常是一行写完一条语句，但如果语句很长，我们可以使用反斜杠(\)来实现多行语句，

# 在 [], {}, 或 () 中的多行语句，不需要使用反斜杠(\)，


# -------------------------------空行------------------------------------------------
# 函数之间或类的方法之间用空行分隔，表示一段新的代码的开始。类和函数入口之间也用一行空行分隔，以突出函数入口的开始。
# 空行与代码缩进不同，空行并不是Python语法的一部分。书写时不插入空行，Python解释器运行也不会出错。但是空行的作用在于分隔两段不同功能或含义的代码，便于日后代码的维护或重构。
# 记住：空行也是程序代码的一部分。

# ------------------------------等待用户输入------------------------------------------
# 执行下面的程序在按回车键后就会等待用户输入：
# input("\n\n按下 enter 键后退出。")

# 以上代码中 ，"\n\n"在结果输出前会输出两个新的空行。一旦用户按下 enter 键时，程序将退出。

# ------------------------------同一行显示多条语句-------------------------------------
# Python可以在同一行中使用多条语句，语句之间使用分号(;)分割，以下是一个简单的实例：

import sys;  x = 'runoob';  sys.stdout.write(x + '\n');

# -------------------------------多个语句构成代码组-------------------------------------
# 缩进相同的一组语句构成一个代码块，我们称之代码组。
# 像if、while、def和class这样的复合语句，首行以关键字开始，以冒号( : )结束，该行之后的一行或多行代码构成代码组。
# 我们将首行及后面的代码组称为一个子句(clause)。
# 如下实例：
# if expression :
#    suite
# elif expression :
#    suite
# else :
#    suite

# ----------------------------------Print输出-----------------------------------------------
# print默认输出是换行的，如果要实现不换行需要在变量末尾加上end = ""：

# 如下实例

x = "a"
y = "b"
# 换行输出
print(x)
print(y)

print('---------')
# 不换行输出
print(x, end=" ")
print(y, end=" ")
print(x+y)

# ------------------------------import 与 from...import-------------------------------------------
# 在 python 用 import 或者 from...import 来导入相应的模块。
# 将整个模块(somemodule)导入，格式为： import somemodule
# 从某个模块中导入某个函数,格式为： from somemodule import somefunction
# 从某个模块中导入多个函数,格式为： from somemodule import firstfunc, secondfunc, thirdfunc
# 将某个模块中的全部函数导入，格式为： from somemodule import *

